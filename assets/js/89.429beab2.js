(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{442:function(s,a,t){"use strict";t.r(a);var v=t(8),n=Object(v.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[a("a",{attrs:{href:"https://mp.weixin.qq.com/s/vAv7XjlbJrMSgJqti-pTPA",target:"_blank",rel:"noopener noreferrer"}},[s._v("文章参考来源"),a("OutboundLink")],1)]),s._v(" "),a("h1",{attrs:{id:"linux-vi-vim编辑器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux-vi-vim编辑器"}},[s._v("#")]),s._v(" linux vi/vim编辑器")]),s._v(" "),a("blockquote",[a("p",[s._v("1、所有的Unix Like系统都会内建vi文书编辑器，其他的文书编辑器则不一定会存在。\n2、但是目前我们使用比较多的是 vim 编辑器。\n3、vim具有程序编辑的能力，可以主动的以字体颜色辨别语法的正确性，方便程序设计。")])]),s._v(" "),a("p",[s._v("【什么是vim】 Vim 是从 vi 发展出来的一个文本编辑器。代码补全、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。\n简单的来说， vi 是老式的字处理器，不过功能已经很齐全了，但是还是有可以进步的地方。 vim 则可以说是程序开发者的一项很好用的工具。")]),s._v(" "),a("p",[s._v("vim键盘图")]),s._v(" "),a("p",[a("img",{attrs:{src:"01.image-1.png",alt:"alt text"}})]),s._v(" "),a("h1",{attrs:{id:"vi-vim-的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vi-vim-的使用"}},[s._v("#")]),s._v(" vi/vim 的使用")]),s._v(" "),a("blockquote",[a("p",[s._v("基本上 vi/vim 共分为三种模式:")]),s._v(" "),a("ul",[a("li",[s._v("命令模式（Command Mode）")]),s._v(" "),a("li",[s._v("输入模式（Insert Mode）")]),s._v(" "),a("li",[s._v("命令行模式（Command-Line Mode）。")])])]),s._v(" "),a("h2",{attrs:{id:"命令模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命令模式"}},[s._v("#")]),s._v(" 命令模式")]),s._v(" "),a("blockquote",[a("p",[s._v("用户刚刚启动 vi/vim，便进入了命令模式。 此状态下敲击键盘动作会被 Vim 识别为命令，而非输入字符，比如我们此时按下 i，并不会输入一个字符，i 被当作了一个命令。")])]),s._v(" "),a("p",[s._v("以下是普通模式常用的几个命令：")]),s._v(" "),a("ul",[a("li",[s._v("i -- 切换到输入模式，在光标当前位置开始输入文本。")]),s._v(" "),a("li",[s._v("x -- 删除当前光标所在处的字符。")]),s._v(" "),a("li",[s._v(": -- 切换到底线命令模式，以在最底一行输入命令。")]),s._v(" "),a("li",[s._v("a -- 进入插入模式，在光标下一个位置开始输入文本。")]),s._v(" "),a("li",[s._v("o：在当前行的下方插入一个新行，并进入插入模式。")]),s._v(" "),a("li",[s._v("0 -- 在当前行的上方插入一个新行，并进入插入模式。")]),s._v(" "),a("li",[s._v("dd -- 剪切当前行。")]),s._v(" "),a("li",[s._v("yy -- 复制当前行。")]),s._v(" "),a("li",[s._v("p（小写） -- 粘贴剪贴板内容到光标下方。")]),s._v(" "),a("li",[s._v("P（大写）-- 粘贴剪贴板内容到光标上方。")]),s._v(" "),a("li",[s._v("u -- 撤销上一次操作。")]),s._v(" "),a("li",[s._v("Ctrl + r -- 重做上一次撤销的操作。")]),s._v(" "),a("li",[s._v(":w -- 保存文件。")]),s._v(" "),a("li",[s._v(":q -- 退出 Vim 编辑器。")]),s._v(" "),a("li",[s._v(":q! -- 强制退出Vim 编辑器，不保存修改。")])]),s._v(" "),a("p",[s._v("若想要编辑文本，只需要启动 Vim，进入了命令模式，按下 i 切换到输入模式即可。")]),s._v(" "),a("p",[s._v("命令模式只有一些最基本的命令，因此仍要依靠底线命令行模式输入更多命令。")]),s._v(" "),a("h2",{attrs:{id:"输入模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输入模式"}},[s._v("#")]),s._v(" 输入模式")]),s._v(" "),a("blockquote",[a("p",[s._v("在命令模式下按下 i 就进入了输入模式，使用Esc键可以返回到普通模式。")])]),s._v(" "),a("p",[s._v("在输入模式中，可以使用以下按键：")]),s._v(" "),a("ul",[a("li",[s._v("字符按键以及Shift组合，输入字符")]),s._v(" "),a("li",[s._v("ENTER，回车键，换行")]),s._v(" "),a("li",[s._v("BACK SPACE，退格键，删除光标前一个字符")]),s._v(" "),a("li",[s._v("DEL，删除键，删除光标后一个字符")]),s._v(" "),a("li",[s._v("方向键，在文本中移动光标")]),s._v(" "),a("li",[s._v("HOME/END，移动光标到行首/行尾")]),s._v(" "),a("li",[s._v("Page Up/Page Down，上/下翻页")]),s._v(" "),a("li",[s._v("Insert，切换光标为输入/替换模式，光标将变成竖线/下划线")]),s._v(" "),a("li",[s._v("ESC，退出输入模式，切换到命令模式")])]),s._v(" "),a("h2",{attrs:{id:"底线命令模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#底线命令模式"}},[s._v("#")]),s._v(" 底线命令模式")]),s._v(" "),a("blockquote",[a("p",[s._v("在命令模式下按下:（英文冒号）就进入了底线命令模式；\n底线命令模式可以输入单个或多个字符的命令，可用的命令非常多；\n在底线命令模式中，基本的命令有（已经省略了冒号） ：")])]),s._v(" "),a("ul",[a("li",[s._v(":w    保存文件。")]),s._v(" "),a("li",[s._v(":q    退出 Vim 编辑器。")]),s._v(" "),a("li",[s._v(":wq   保存文件并退出 Vim 编辑器。")]),s._v(" "),a("li",[s._v(":q!   强制退出Vim编辑器，不保存修改。")]),s._v(" "),a("li",[s._v("按ESC键可随时退出底线命令模式。")])]),s._v(" "),a("p",[s._v("简单的说，我们可以将这三个模式想成底下的图标来表示：")]),s._v(" "),a("p",[a("img",{attrs:{src:"02.image-2.png",alt:"alt text"}})]),s._v(" "),a("h2",{attrs:{id:"使用-vi-vim-进入一般模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-vi-vim-进入一般模式"}},[s._v("#")]),s._v(" 使用 vi/vim 进入一般模式")]),s._v(" "),a("blockquote",[a("p",[s._v("如果你想要使用 vim 来建立一个名为 runoob.txt 的文件时，你可以这样做：")])]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" file.txt\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"03.image-3.png",alt:"alt text"}})]),s._v(" "),a("p",[s._v("按下 i 进入输入模式(也称为编辑模式)，开始编辑文字")]),s._v(" "),a("p",[s._v("在一般模式之中，只要按下 i, o, a 等字符就可以进入输入模式了！")]),s._v(" "),a("p",[s._v("在编辑模式当中，你可以发现在左下角状态栏中会出现 –INSERT- 的字样，那就是可以输入任意字符的提示。")]),s._v(" "),a("p",[s._v("这个时候，键盘上除了Esc这个按键之外，其他的按键都可以视作为一般的输入按钮了，所以你可以进行任何的编辑。")]),s._v(" "),a("p",[a("img",{attrs:{src:"04.image.png",alt:"alt text"}})]),s._v(" "),a("p",[s._v("按下ESC按钮回到一般模式\n假设我已经按照上面的样式给他编辑完毕了，那么应该要如何退出呢？是的！没错！就是给他按下Esc这个按钮即可！马上你就会发现画面左下角的 – INSERT – 不见了！")]),s._v(" "),a("p",[s._v("在一般模式中按下:wq储存后离开 vim")]),s._v(" "),a("blockquote",[a("p",[s._v("除了上面简易范例的 i, Esc, :wq 之外，其实 vim 还有非常多的按键可以使用。")])]),s._v(" "),a("h2",{attrs:{id:"vi-vim-按键说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vi-vim-按键说明"}},[s._v("#")]),s._v(" vi/vim 按键说明")]),s._v(" "),a("h3",{attrs:{id:"第一部分-一般模式可用的光标移动、复制粘贴、搜索替换等"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一部分-一般模式可用的光标移动、复制粘贴、搜索替换等"}},[s._v("#")]),s._v(" 第一部分：一般模式可用的光标移动、复制粘贴、搜索替换等")]),s._v(" "),a("p",[s._v("本文主要介绍在 vi/vim 中如何快速删除单行和多行的操作方式。")]),s._v(" "),a("h2",{attrs:{id:"删除单行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除单行"}},[s._v("#")]),s._v(" 删除单行")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("删除单行\n按下 ESC\n光标移动到要删除的行上\n\n按下 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("dd")]),s._v(" 即可删除\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h2",{attrs:{id:"删除指定区间范围的行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除指定区间范围的行"}},[s._v("#")]),s._v(" 删除指定区间范围的行")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("删除指定数量的行\n按下 ESC，输入 10dd，表示快速删除当前行之后的 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" 行内容。\n\n删除指定区间范围的行\n通过指定起始行和结束行的行号来进行删除，语法"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("起始"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(","),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("结束"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("d。\n\n比如删除 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("-10 的内容，输入 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(",10d 即可\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("基于上面的特殊字符，可以快速实现多行内容删除。\n\n删除当前行和之后的所有内容: .,"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$d")]),s._v("\n\n删除当前行到第 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" 行的内容：.,100d\n\n删除第 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" 行到文件行尾的内容：10,"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$d")]),s._v("\n\n删除所有行内容：%d\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h2",{attrs:{id:"指定行-批量注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指定行-批量注释"}},[s._v("#")]),s._v(" 指定行，批量注释")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("使用命令模式批量注释\n如果你想通过命令行来完成这个任务，可以这样做：\n\n将光标置于第7行。\n输入 :7,12s/^/"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# / （适用于以 # 注释的脚本）或 :7,12s/^;// （适用于以 // 注释的语言）。")]),s._v("\n按 Enter 应用命令。这将在第7行到第12行的每一行的行首前加上注释符号。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h2",{attrs:{id:"删除当前行光标后的所有内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除当前行光标后的所有内容"}},[s._v("#")]),s._v(" 删除当前行光标后的所有内容")]),s._v(" "),a("ul",[a("li",[s._v("移动到你想要开始删除的位置。")]),s._v(" "),a("li",[s._v("按 D 键将会删除从当前光标位置到行尾的所有字符。")])])])}),[],!1,null,null,null);a.default=n.exports}}]);